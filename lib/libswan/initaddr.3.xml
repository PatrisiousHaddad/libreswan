<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
                   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<refentry id='initaddr3'>
<refmeta>
<refentrytitle>IPSEC-INITADDR</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='date'>11 Sept 2000</refmiscinfo>
<refmiscinfo class="source">libreswan</refmiscinfo>
<refmiscinfo class="manual">Executable programs</refmiscinfo>
</refmeta>
<refnamediv id='name'>
<refname>ipsec-initaddr</refname>
<refname>ipsec-addrtypeof</refname>
<refname>ipsec-addrlenof</refname>
<refname>ipsec-addrbytesof</refname>
<refname>ipsec-addrbytesptr_read</refname>
<refname>ipsec-addrbytesptr_write</refname>
<refpurpose>initialize an ip_address, get address type of an ip_address, get length of address within an ip_address, get copy of address within an ip_address, get pointer to address within an ip_address</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;libreswan.h&gt;

</funcsynopsisinfo>
<funcprototype>
<funcdef>const char *<function>initaddr</function></funcdef>
    <paramdef>const char * <parameter>src</parameter></paramdef>
    <paramdef>size_t <parameter>srclen</parameter></paramdef>
    <paramdef>int <parameter>af</parameter></paramdef>
    <paramdef>ip_address * <parameter>dst</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>int <function>addrtypeof</function></funcdef>
    <paramdef>const ip_address * <parameter>src</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>size_t <function>addrlenof</function></funcdef>
    <paramdef>const ip_address * <parameter>src</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>size_t <function>addrbytesof</function></funcdef>
    <paramdef>const ip_address * <parameter>src</parameter></paramdef>
    <paramdef>unsigned char * <parameter>dst</parameter></paramdef>
    <paramdef>size_t <parameter>dstlen</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>size_t <function>addrbytesptr_read</function></funcdef>
    <paramdef>const ip_address * <parameter>src</parameter></paramdef>
    <paramdef>const unsigned char ** <parameter>dst</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>size_t <function>addrbytesptr_write</function></funcdef>
    <paramdef>ip_address * <parameter>src</parameter></paramdef>
    <paramdef>unsigned char ** <parameter>dst</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>


<refsect1 id='description'><title>DESCRIPTION</title>
<para>The
<emphasis>&lt;libreswan.h&gt;</emphasis>
library uses an internal type
<emphasis>ip_address</emphasis>
to contain one of the (currently two) types of IP address.
These functions provide basic tools for creating and examining this type.</para>

<para><emphasis>initaddr</emphasis>
initializes a variable
<emphasis>*dst</emphasis>
of type
<emphasis>ip_address</emphasis>
from an address
(in network byte order,
indicated by a pointer
<varname role='parameter'>src</varname>
and a length
<varname role='parameter'>srclen</varname>)
and an address family
<varname role='parameter'>af</varname>
(typically
<emphasis>AF_INET</emphasis>
or
<emphasis>AF_INET6</emphasis>).
The length must be consistent with the address family.</para>

<para><emphasis>addrtypeof</emphasis>
returns the address type of an address,
normally
<emphasis>AF_INET</emphasis>
or
<emphasis>AF_INET6</emphasis>.
(The
<emphasis>&lt;libreswan.h&gt;</emphasis>
header file arranges to include the necessary headers for these
names to be known.)</para>

<para><emphasis>addrlenof</emphasis>
returns the size (in bytes) of the address within an
<emphasis>ip_address</emphasis>,
to permit storage allocation etc.</para>

<para><emphasis>addrbytesof</emphasis>
copies the address within the
<emphasis>ip_address</emphasis>
<varname role='parameter'>src</varname>
to the buffer indicated by the pointer
<varname role='parameter'>dst</varname>
and the length
<varname role='parameter'>dstlen</varname>,
and returns the address length (in bytes).
If the address will not fit,
as many bytes as will fit are copied;
the returned length is still the full length.
It is the caller's responsibility to check the
returned value to ensure that there was enough room.</para>

<para><emphasis>addrbytesptr_read</emphasis> and <emphasis>addrbytesptr_write</emphasis> and
set
<emphasis>*dst</emphasis>
to a pointer to the internal address within the
<emphasis>ip_address</emphasis>,
and returns the address length (in bytes).
If
<varname role='parameter'>dst</varname>
is
<emphasis>NULL</emphasis>,
it just returns the address length.
</para>

<para><emphasis>initaddr</emphasis>
returns
<emphasis>NULL</emphasis>
for success and
a pointer to a string-literal error message for failure;
see DIAGNOSTICS.</para>

<para>The functions which return
<type>size_t</type>
return
<literal>0</literal>
for a failure.</para>
</refsect1>

<refsect1 id='see_also'><title>SEE ALSO</title>
<para><citerefentry><refentrytitle>inet</refentrytitle><manvolnum>3</manvolnum></citerefentry>, <citerefentry><refentrytitle>ipsec-ttoaddr</refentrytitle><manvolnum>3</manvolnum></citerefentry></para>
</refsect1>

<refsect1 id='diagnostics'><title>DIAGNOSTICS</title>
<para>An unknown address family is a fatal error for any of these functions
except
<function>addrtypeof</function>.
An address-size mismatch is a fatal error for
<function>initaddr</function>.</para>
</refsect1>

<refsect1 id='history'><title>HISTORY</title>
<para>Written for the FreeS/WAN project by Henry Spencer.</para>
</refsect1>

<refsect1 id='bugs'><title>BUGS</title>
<para><emphasis>addrtypeof</emphasis>
should probably have been named
<emphasis>addrfamilyof</emphasis>.</para>
</refsect1>
  <refsect1 id='author'>
    <title>AUTHOR</title>
    <para>
      <emphasis role='strong'>Paul Wouters</emphasis>
    </para>
  </refsect1>
</refentry>
